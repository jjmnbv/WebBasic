<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="PermissionGroup">

	<resultMap id="RM.PermissionGroup" type="com.jckj.webbasic.model.PermissionGroup">
        <result property="permissionGroupId" column="PERMISSION_GROUP_ID"/>
        <result property="permissionId" column="PERMISSION_ID"/>
        <result property="groupId" column="GROUP_ID"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="PermissionGroup.columns">
	    <![CDATA[
		PERMISSION_GROUP_ID,PERMISSION_ID,GROUP_ID
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="PermissionGroup.insert" useGeneratedKeys="true" keyProperty="permissionGroupId">
    <![CDATA[
        INSERT INTO t_permission_group (
        	PERMISSION_GROUP_ID ,
        	PERMISSION_ID ,
        	GROUP_ID 
        ) VALUES (
        	#{permissionGroupId} ,
        	#{permissionId} ,
        	#{groupId} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="PermissionGroup.update" >
    <![CDATA[
        UPDATE t_permission_group SET
	        PERMISSION_ID = #{permissionId} ,
	        GROUP_ID = #{groupId} 
        WHERE 
	        PERMISSION_GROUP_ID = #{permissionGroupId} 
    ]]>
	</update>

    <delete id="PermissionGroup.delete">
    <![CDATA[
        DELETE FROM t_permission_group WHERE
        PERMISSION_GROUP_ID = #{id} 
    ]]>
    </delete>
    
    <select id="PermissionGroup.getById" resultMap="RM.PermissionGroup">
		SELECT <include refid="PermissionGroup.columns" />
	    <![CDATA[
		    FROM t_permission_group 
	        WHERE 
		        PERMISSION_GROUP_ID = #{id} 
	    ]]>
	</select>
	
	<sql id="PermissionGroup.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(permissionGroupId)">
				AND PERMISSION_GROUP_ID = #{permissionGroupId}
			</if>
	       <if test="@Ognl@isNotEmpty(permissionId)">
				AND PERMISSION_ID = #{permissionId}
			</if>
	       <if test="@Ognl@isNotEmpty(groupId)">
				AND GROUP_ID = #{groupId}
			</if>
		</where>
	</sql>
		
    <select id="PermissionGroup.findPage.count" resultType="long">
        SELECT count(*) FROM t_permission_group 
		<include refid="PermissionGroup.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="PermissionGroup.findPage" resultMap="RM.PermissionGroup">
    	SELECT <include refid="PermissionGroup.columns" />
	    FROM t_permission_group 
		<include refid="PermissionGroup.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

